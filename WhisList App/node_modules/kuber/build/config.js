"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.replaceInObject = replaceInObject;
exports.config = config;

var _yaml = _interopRequireDefault(require("yaml"));

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

function replaceInObject(obj, data) {
  const stringified = JSON.stringify(obj);
  let replaced = stringified;

  for (const [key, value] of Object.entries(data)) {
    replaced = replaced.replace(new RegExp(key, "g"), value);
  }

  return JSON.parse(replaced);
}

const cache = {};

async function config(filePath, replacements, useCache = true) {
  if (Array.isArray(filePath)) {
    filePath = _path.default.join(...filePath);
  }

  const file = useCache && cache[filePath] || (await _fsExtra.default.readFile(filePath, 'utf8'));

  const data = _yaml.default.parse(file);

  cache[filePath] = data;
  return replaceInObject(data, replacements);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcudHMiXSwibmFtZXMiOlsicmVwbGFjZUluT2JqZWN0Iiwib2JqIiwiZGF0YSIsInN0cmluZ2lmaWVkIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlcGxhY2VkIiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVwbGFjZSIsIlJlZ0V4cCIsInBhcnNlIiwiY2FjaGUiLCJjb25maWciLCJmaWxlUGF0aCIsInJlcGxhY2VtZW50cyIsInVzZUNhY2hlIiwiQXJyYXkiLCJpc0FycmF5IiwicGF0aCIsImpvaW4iLCJmaWxlIiwiZnMiLCJyZWFkRmlsZSIsIllBTUwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFJTyxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUFtQ0MsSUFBbkMsRUFBeUQ7QUFDOUQsUUFBTUMsV0FBVyxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosR0FBZixDQUFwQjtBQUNBLE1BQUlLLFFBQVEsR0FBR0gsV0FBZjs7QUFDQSxPQUFLLE1BQU0sQ0FBQ0ksR0FBRCxFQUFNQyxLQUFOLENBQVgsSUFBMkJDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlUixJQUFmLENBQTNCLEVBQWlEO0FBQy9DSSxJQUFBQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0ssT0FBVCxDQUFpQixJQUFJQyxNQUFKLENBQVdMLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBakIsRUFBdUNDLEtBQXZDLENBQVg7QUFDRDs7QUFDRCxTQUFPSixJQUFJLENBQUNTLEtBQUwsQ0FBV1AsUUFBWCxDQUFQO0FBQ0Q7O0FBRUQsTUFBTVEsS0FBVSxHQUFHLEVBQW5COztBQUVPLGVBQWVDLE1BQWYsQ0FBc0JDLFFBQXRCLEVBQW1EQyxZQUFuRCxFQUFpRkMsUUFBUSxHQUFHLElBQTVGLEVBQWtHO0FBQ3ZHLE1BQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjSixRQUFkLENBQUosRUFBNkI7QUFDM0JBLElBQUFBLFFBQVEsR0FBR0ssY0FBS0MsSUFBTCxDQUFVLEdBQUdOLFFBQWIsQ0FBWDtBQUNEOztBQUNELFFBQU1PLElBQUksR0FBSUwsUUFBUSxJQUFJSixLQUFLLENBQUNFLFFBQUQsQ0FBbEIsS0FBaUMsTUFBTVEsaUJBQUdDLFFBQUgsQ0FBWVQsUUFBWixFQUFzQixNQUF0QixDQUF2QyxDQUFiOztBQUNBLFFBQU1kLElBQUksR0FBR3dCLGNBQUtiLEtBQUwsQ0FBV1UsSUFBWCxDQUFiOztBQUNBVCxFQUFBQSxLQUFLLENBQUNFLFFBQUQsQ0FBTCxHQUFrQmQsSUFBbEI7QUFDQSxTQUFPRixlQUFlLENBQUNFLElBQUQsRUFBT2UsWUFBUCxDQUF0QjtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFlBTUwgZnJvbSAneWFtbCdcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSdcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbnR5cGUgUmVwbGFjZW1lbnRNYXAgPSB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlSW5PYmplY3Qob2JqOiBhbnksIGRhdGE6IFJlcGxhY2VtZW50TWFwKSB7XG4gIGNvbnN0IHN0cmluZ2lmaWVkID0gSlNPTi5zdHJpbmdpZnkob2JqKVxuICBsZXQgcmVwbGFjZWQgPSBzdHJpbmdpZmllZFxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkge1xuICAgIHJlcGxhY2VkID0gcmVwbGFjZWQucmVwbGFjZShuZXcgUmVnRXhwKGtleSwgXCJnXCIpLCB2YWx1ZSlcbiAgfVxuICByZXR1cm4gSlNPTi5wYXJzZShyZXBsYWNlZClcbn1cblxuY29uc3QgY2FjaGU6IGFueSA9IHt9XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25maWcoZmlsZVBhdGg6IHN0cmluZyB8IHN0cmluZ1tdLCByZXBsYWNlbWVudHM6IFJlcGxhY2VtZW50TWFwLCB1c2VDYWNoZSA9IHRydWUpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZmlsZVBhdGgpKSB7XG4gICAgZmlsZVBhdGggPSBwYXRoLmpvaW4oLi4uZmlsZVBhdGgpXG4gIH1cbiAgY29uc3QgZmlsZSA9ICh1c2VDYWNoZSAmJiBjYWNoZVtmaWxlUGF0aF0pIHx8IGF3YWl0IGZzLnJlYWRGaWxlKGZpbGVQYXRoLCAndXRmOCcpXG4gIGNvbnN0IGRhdGEgPSBZQU1MLnBhcnNlKGZpbGUpXG4gIGNhY2hlW2ZpbGVQYXRoXSA9IGRhdGFcbiAgcmV0dXJuIHJlcGxhY2VJbk9iamVjdChkYXRhLCByZXBsYWNlbWVudHMpXG59XG5cbiJdfQ==